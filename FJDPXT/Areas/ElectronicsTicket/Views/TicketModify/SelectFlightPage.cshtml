@using FJDPXT.Model
@{
    Layout = null;
    //S_航班表
    List<S_Airport> airports = ViewBag.airports;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ET航班更改</title>
    <link href="~/Content/layui/css/layui.css" rel="stylesheet" />
    <!--bootstrap 框架样式表-->
    <link href="~/Content/bootstrap-4.1.3-dist/css/bootstrap.min.css" rel="stylesheet" />
    <!--后台模板中的字体图标css样式-->
    <link href="~/Content/app-assets/fonts/simple-line-icons/style.css" rel="stylesheet" />
    <style>
        /* 各个航段 标题部分上线边框 */
        .segmentTitle {
            padding: 5px 0;
            border-top: 2px solid black;
            border-bottom: 2px solid black;
            font-size: 22px;
        }

        /* 各个航段 标题部分 按钮样式 */
        .btn-collapse-t {
            padding: 2px 10px;
            background: transparent;
            font-size: 20px;
            border: 0;
        }

            /* 各个航段 标题部分 按钮去除获得焦点时的蓝色边框 */
            .btn-collapse-t.focus,
            .btn-collapse-t:focus {
                outline: 0;
                box-shadow: none;
            }

        /* 航班舱位 等级 座位 价格显示 */
        .flightCabinItem {
            display: inline-block;
            width: 120px;
        }

        /* 让layui单元格多出的部分自动换行 */
        .layui-table-cell {
            font-size: 14px;
            padding: 0 5px;
            height: auto;
            overflow: visible;
            text-overflow: inherit;
            white-space: normal;
            word-break: break-all;
        }

        .layui-table-view {
            margin: 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-sm-12 col-md-8">
                @*layui-form 标识一个表单元素块为layui的表单，
                    注意：一旦使用layui-form，如果不加载form模块，select、checkbox、radio等将无法显示，并且无法使用form相关功能*@
                <form class="layui-form">
                    <div class="form-row">
                        <label class="col-6 col-form-label"><i class="icon-plane"></i>&nbsp;&nbsp;航空公司:中国东方航空公司</label>
                    </div>
                    <div class="form-row">
                        <label class="col-1 col-form-label"><i class="icon-arrow-up"></i>&nbsp;&nbsp;<b>从</b></label>
                        <label class="col-2 col-xl-1 col-form-label">城市：</label>
                        <div class="col-3 col-lg-2">
                            <input type="text" class="form-control" readonly="" placeholder="城市代码" />
                        </div>
                        <div class="col-6 col-lg-7 col-xl-8 layui-form-item">
                            <select name="city1" lay-verify="" lay-search class="form-control ow-airport">
                                <option value="0" data-code=""></option>
                                @foreach (S_Airport airport in airports)
                                {
                                    <option value="@airport.airportID" data-code="@airport.airportCode">@airport.cityName [@airport.airportName]</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <label class="col-1 col-form-label"><i class="icon-arrow-down"></i>&nbsp;&nbsp;<b>到</b></label>
                        <label class="col-2 col-xl-1 col-form-label">城市：</label>
                        <div class="col-3 col-lg-2">
                            <input type="text" class="form-control" readonly="" placeholder="城市代码" />
                        </div>
                        <div class="col-6 col-lg-7 col-xl-8 layui-form-item">
                            <select name="city2" lay-verify="" lay-search class="form-control ow-airport">
                                <option value="0" data-code=""></option>
                                @foreach (S_Airport airport in airports)
                                {
                                    <option value="@airport.airportID" data-code="@airport.airportCode">@airport.cityName [@airport.airportName]</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                        <label class="col-3 col-xl-2 col-form-label"><i class="icon-calendar"></i>&nbsp;&nbsp;出发日期</label>
                        <div class="col-6 col-xl-4">
                            <input type="text" class="form-control myLayDate" id="ow-startDate" />
                        </div>
                        <div class="col-2">
                            <button type="button" class="btn btn-block btn-primary" id="ow-btnSearch" onclick="tabSearch()">查询</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-12 text-center">
                <h2 id="h2Title">ET航班更改</h2>
            </div>

        </div>
        @*存放航段数据的容器*@
        <div class="accordion border-bottom" id="accordionSegment">

        </div>
        @*变更信息回填*@
        <div class="mt-4 justify-content-center d-none" id="divBottom">
            <!--隐藏域：电子客票ID-->
            <input type="hidden" id="intETicketID" />
            <input type="hidden" id="PNRSegmentID" />
            <!--保存内容-->
            <div class="row">
                <label class="col-5 col-form-label text-right">请输入PNR：</label>
                <input type="text" class="form-control col-3" id="ETPNRNo" name="PNRNo" />
                <i style="color:#007bff;font-size:12px; line-height:38px;">( 缺省为当前票的PNR)</i>
            </div>
            <div class="row mt-2" id="DivInvoluntaryUpdate">
                <label class="col-5 col-form-label text-right">变更原因 ：</label>
                <input type="text" class="form-control col-4" id="changeReason" />
            </div>
            <div class="row  mt-2 text-center">
                <div class="col-12 text-center">
                    <div class="form-group text-center">
                        <button type="button" class="btn btn-outline-primary mr-2" onclick="btnChangeFlight()">确认</button>
                        <button type="button" class="btn btn-outline-secondary ml-2" onclick="btnClose()">返回</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* 航段选择模板 *@
    <div class="card d-none" id="segmentCardT">
        <div class="card-header pt-0 pb-0">
            <div class="row">
                <div class="col-12 p-0">
                    <button id="btnCollapseT" class="btn btn-block btn-collapse-t" type="button" data-toggle="collapse" data-target="#segmentCollapseT">
                        <div class="row segmentTitle justify-content-between">
                            <div class="col-1 text-left">
                                <p><i class="icon-plane">&nbsp;</i><b data-id="title">单程</b></p>
                            </div>
                            <div class="col-1"></div>
                            <div class="col-10 col-md-4 col-lg-4">
                                <b>航线：</b><span id="line-ow" data-id="site">广州——北京</span>
                            </div>
                            <div class="col-12 col-md-4 col-lg-4 text-right">
                                @* <i class="icon-list"></i> *@
                                <b>日期：</b> <span id="date-ow" data-id="date">2019-12-10</span>
                            </div>
                        </div>
                    </button>
                </div>
            </div>
        </div>
        <div id="segmentCollapseT" class="collapse" data-parent="#accordionSegment">
            <div class="card-body p-0">
                <table lay-filter="tableFlightT" id="tableFlightT">
                    <thead>
                        <tr>
                            <th lay-data="{field:'index',align:'center', width:40}">序号</th>
                            <th lay-data="{field:'flightCode',align:'center', width:80}">航班号</th>
                            <th lay-data="{field:'flighrSite',align:'center', width:160}">始发地 - 目的地</th>
                            <th lay-data="{field:'flightTime',align:'center', width:120}">起飞 - 到达</th>
                            <th lay-data="{field:'planType',align:'center', width:80}">机型</th>
                            <th lay-data="{field:'seatInfo'}">座位/座位数/价格(人民币)</th>
                        </tr>
                    </thead>
                    <tbody data-id="tbodyFlight">
                        @* 行数据模板 *@
                        @* <tr> *@
                        @*     <td>1</td> *@
                        @*     <td>MU5317</td> *@
                        @*     <td>乌鲁木齐 到 齐齐哈尔</td> *@
                        @*     <td>10:00 - 12:20</td> *@
                        @*     <td>A380</td> *@
                        @*     <td> *@
                        @*         <div class="flightCabinItem"><input type="radio" name="cabin" value="1" title="F>9 ￥1790"></div> *@
                        @*         <div class="flightCabinItem"><input type="radio" name="cabin" value="1" title="F>9 ￥1790"></div> *@
                        @*         <div class="flightCabinItem"><input type="radio" name="cabin" value="1" title="F>9 ￥1790"></div> *@
                        @*         <div class="flightCabinItem"><input type="radio" name="cabin" value="1" title="F>9 ￥1790"></div> *@
                        @*         <div class="flightCabinItem"><input type="radio" name="cabin" value="1" title="F>9 ￥1790"></div> *@
                        @*         <div class="flightCabinItem"><input type="radio" name="cabin" value="1" title="F=7 ￥1790"></div> *@
                        @*     </td> *@
                        @* </tr> *@
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script src="~/Content/app-assets/vendors/js/core/jquery-3.3.1.min.js"></script>
    <script src="~/Content/bootstrap-4.1.3-dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Content/layui/layui.js"></script>
    <script src="~/Content/js/customfunction.js"></script>
    <script>
        //获取sessionStorage中的数据
        var strChangeData = sessionStorage.getItem("changeData");
        var airportAndDate;
        if (strChangeData != null) {
            //反序列化JSON对象
            changeData = JSON.parse(strChangeData);
            //（1）判断是否自愿更改
            if (changeData.voluntaryType === 1) {
                $("#DivInvoluntaryUpdate").hide();//隐藏变更原因
            }
            if (changeData.voluntaryType === 2) {
                $("#DivInvoluntaryUpdate").show();//显示变更原因
            }
            //回填数据
            $("#ETPNRNo").val(changeData.PNRNo);
            //隐藏项
            $("#intETicketID").val(changeData.intETicketID);//票号ID
            $("#PNRSegmentID").val(changeData.PNRSegmentID);//航段ID
        }
        else {
            alert("请选择要更改的电子客票");
        }
        //1.1表格数据的加载
        var layuiTable, laydate, layer;
        $(function () {
            layui.use(['table', 'layer', 'laydate'], function () {
                layer = layui.layer;
                laydate = layui.laydate;
                layuiTable = layui.table;
                //初始化日期控件
                laydate.render({
                    elem: "#ow-startDate",
                    btns: ['now', 'confirm'],
                    type: "date",
                    trigger: "click"//解决Laydate一闪而过的问题
                });
            });
        });

        //1.2生成航班数据
        //初始化预定信息--清理以前的session
        sessionStorage.removeItem("cityAndDate");//清除掉选择的始发地、目的地、日期信息
        var regExpDate = /^\d{4}([-/]\d{2}){2}$/
        //查询按钮
        function tabSearch() {
            //清空数据
            $("#accordionSegment").empty();//存放各个航段数据的容器

            //==获取数据m m8 m8i8 mik,i m,   ik,   , m m  nm  m jmn8mn8jmn8jm  m   njm8 njm8 n  n n njn n n n  n   n  nn nj n    bh b   bhbhbb  bh8 9k,8 ki
            //获取选中的城市机场信息-JQuery变量元素
            var airports = [];
            $(".ow-airport").each(function () {
                var airportId = parseInt($(this).val());
                airports.push(airportId);
            });
            //获取出发时间
            var dates = [];
            dates.push($("#ow-startDate").val());

            //数据验证
            //验证 起飞地、目的地是否有未选择
            if (airports[0] === 0) {
                myAlert("请选择出发城市");
                return;
            }
            if (airports[1] === 0) {
                myAlert("请选择目的地城市");
                return;
            }
            if (airports[0] == airports[1]) {
                myAlert("起飞地与目的地相同,请重新选择");
                return;
            }
            //验证选择的日期是否符合 使用正则表达式检查日期格式
            if (dates[0] == undefined && !regExpDate.test(dates[0])) {
                myAlert("请选择出发日期");
                return;
            }
            //构建需要传递到航班,舱位选择页面的页面
            airportAndDate = {
                flightType: 1,          //类型：1-单程
                segmentNum: 1,          //航段数
                airports: airports,     //机场城市id
                dates: dates            //日期
            };
            if (airportAndDate != null) {
                //反序列化成JSON对象
                // airportAndDate = JSON.parse(strAirportAndDate);
                // 发送请求航班数据
                var layerIndex = layer.load();
                $.post("@Url.Content("~/ElectronicsTicket/TicketModify/SelectFlights")",//url
                   airportAndDate,//数据
                   function (jsonData) {
                       layer.close(layerIndex);//关闭加载层
                       //console.log(jsonData);

                       var accordionSegment = $("#accordionSegment");//存放各个航段的容器
                       var segmentCardT = $("#segmentCardT");

                       //遍历生成各个航段
                       for (var i = 0; i < jsonData.length; i++) {
                           //复制模板 得到基本架构
                           var segmentCard = segmentCardT.clone();
                           //显示 移除d-none类
                           segmentCard.removeClass("d-none");
                           //修改相关的ID
                           segmentCard.prop("id", "segmentCard" + i);//航段card id
                           segmentCard.find("#btnCollapseT").prop("id", "btnCollapse" + i);//Collapse Card切换按钮id
                           segmentCard.find("#btnCollapse" + i).attr("data-target", "#segmentCollapse" + i);//Collapse Card切换按钮的data-target属性                                                                                          
                           segmentCard.find("#segmentCollapseT").prop("id", "segmentCollapse" + i);//collapse 内容部分id
                           segmentCard.find("#tableFlightT").prop("id", "tableFlight" + i);//各个航段候选航班表格id
                           segmentCard.find("#tableFlight" + i).attr("lay-filter", "tableFlight" + i);//各个航段候选航班表格 的 lay-filter属性

                           //第一个默认展开内容部分
                           if (i === 0) {
                               segmentCard.find("#segmentCollapse" + i).addClass("show");
                           }
                           //==设置航段号 - 单程； 往、返； 航段1、航段2、航段3...
                           var segmentTitle = segmentCard.find('b[data-id="title"]');
                           if (airportAndDate.flightType === 2) {
                               //往返程
                               if (i === 0) {
                                   segmentTitle.text('航段:往');
                               }
                               if (i === 1) {
                                   segmentTitle.text('航段:返');
                               }
                           } else
                               if (airportAndDate.flightType === 3) {
                                   //联程
                                   segmentTitle.text("航段" + (i + 1));
                               } else {
                                   //单程--默认状态 无需操作
                               }
                           //设置日期
                           var segmentDate = segmentCard.find('span[data-id="date"]');
                           segmentDate.text(jsonData[i].strDate);

                           //设置航线 起飞城市--降落城市
                           var segmentSite = segmentCard.find('span[data-id="site"]');
                           segmentSite.text(jsonData[i].orangeCityName + "--" + jsonData[i].destinationCityName)

                           //设置表格数据
                           var tbody = segmentCard.find('tbody[data-id="tbodyFlight"]');
                           //==遍历 flightList 获取航班数据
                           var flightList = jsonData[i].flightList;
                           for (var j = 0; j < flightList.length; j++) {
                               var tr = $(document.createElement("tr"));
                               //单元格1 序号 tr.append("<td></td>")
                               tr.append("<td>" + (j + 1) + "</td>");
                               //单元格2 航班号
                               tr.append("<td>" + flightList[j].flightCode.trim() + "</td>");
                               //单元格3 出发点--目的地
                               tr.append("<td>" + flightList[j].orangeCityName + "到"
                                   + flightList[j].destinationCityName + "</td>");
                               //单元格4 起飞时间-到达时间 tr.append("<td>"++"</td>")
                               tr.append("<td>" + flightTimeToStr(flightList[j].departureTime, flightList[j].arrivalTime) + "</td>");
                               //单元格5 机型
                               tr.append("<td>" + flightList[j].planTypeName + "</td>")
                               //=单元格6  座位/座位数/价格
                               var td6 = $(document.createElement("td"));//创建td
                               var flightCabins = flightList[j].flightCabins;//获取出航班信息中的舱位信息list
                               //将航班时间和日期拼接，用于后续多航段时间判断
                               var startEndDate = timeObjToDateTimeStr(jsonData[i].strDate, flightList[j].departureTime, flightList[j].arrivalTime);
                               //遍历舱位信息list 生成舱位信息
                               for (var k = 0; k < flightCabins.length; k++) {
                                   var cabinName = "cabin" + i;//同一航段的使用同一name，保证同一个航段只能选择一个
                                   var cabinTitle = flightCabins[k].cabinTypeCode;//舱位等级编号
                                   //舱位剩余座位数 大于9显示 >9;否则显示具体的剩余座位数
                                   if ((flightCabins[k].seatNum - flightCabins[k].sellSeatNum) > 9) {
                                       cabinTitle += ">9";
                                   } else {
                                       cabinTitle += "=" + (flightCabins[k].seatNum - flightCabins[k].sellSeatNum);
                                   }
                                   //价格
                                   cabinTitle += " ￥" + flightCabins[k].cabinPrice;
                                   //拼接舱位价格信息
                                   td6.append('<div style="display:inline-block" class="flightCabinItem"><input type="radio" name="' + cabinName +
                                       '" value="1" data-flight-id="' + flightCabins[k].flightID +
                                       '" data-flight-cabin-id="' + flightCabins[k].flightCabinID +
                                       '" data-start-end-date="' + startEndDate +
                                       '" data-seat-num="' + flightCabins[k].seatNum +
                                       '" title="' + cabinTitle +
                                       '"></div>');
                               }
                               //添加单元格6到tr中
                               tr.append(td6);

                               //将tr添加到tbody中
                               tbody.append(tr);

                           }
                           //将一个航段的segmentCard添加到外部容器中
                           accordionSegment.append(segmentCard);


                           //使用layui table的 转换静态表格 功能
                           var tableFlightId = "tableFlight" + i;
                           layuiTable.init(tableFlightId, {
                               //height: 376, //设置高度
                               //limit: 10 //注意：请务必确保 limit 参数（默认：10）是与你服务端限定的数据条数一致
                           })

                       }
                       //显示出底部的信息
                       $("#divBottom").removeClass("d-none");
                   });
            } else
            {
                layer.alert("请选择城市和时间");
            }
        };
        //1.3 将航班时间和日期拼接
        function timeObjToDateTimeStr(flightDate, timeStart, timeEnd) {
            var startDate = new Date(flightDate);
            var endDate = startDate;
            //判断降落时间是否是第二天,如果是+1天
            if (timeEnd.Ticks < timeStart.Ticks) {
                endDate.setDate(endDate.getDate() + 1);
            }
            //转为将日期和时间转为字符串
            var strStart = startDate.getFullYear() + "-" + startDate.getMonth() + "-" + startDate.getDate() +
                " " + timeStart.Hours + ":" + timeStart.Minutes;
            var strEnd = endDate.getFullYear() + "-" + endDate.getMonth() + "-" + endDate.getDate() +
                " " + timeEnd.Hours + ":" + timeEnd.Minutes;
            return strStart + ";" + strEnd;
        }

        //1.4 返回
        function btnClose()
        {
            var ID = $("#intETicketID").val();
            //跳转到电子客票页面
            window.location.replace("OrderInfoShow?ETicketID=" + ID);
        }

        //1.5 确认保存
        function btnChangeFlight()
        {
            //获取各个航段选择的航班，舱位信息---航班舱位表
            var flightCabinIDs = [];//记录各个航段选择的航班舱位ID（后续可以通过查询出航班ID和舱位等级）        

            //遍历航段 获取用户选择数据
            for (var i = 0; i < airportAndDate.segmentNum; i++) {
                //获取航段信息(非保存数据,用于提示用户)
                var segmentTitle = $("#segmentCard" + i).find('b[data-id="title"]').text();

                //获取用户选中的航班舱位信息
                var checkedSegmentCabin = $('[name="cabin' + i + '"]:checked');

                //判断用户是否选择舱位
                if (checkedSegmentCabin.length == 0)
                {
                    myAlert("请选择 [" + segmentTitle + "] 的航班和舱位");
                    return;
                }
                //获取航班舱位ID
                flightCabinIDs.push(checkedSegmentCabin.eq(0).data("flight-cabin-id"));
            }
            var ID = $("#intETicketID").val();
            var strChangeReason = $("#changeReason").val();//变更原因
            var intPNRSegmentID = $("#PNRSegmentID").val();//航段ID

            //保存数据--发送请求
            $.post("/ElectronicsTicket/TicketModify/ChangeFlight",
            {
                intETicketID: ID,
                flightCabinIDs: flightCabinIDs,
                strChangeReason: strChangeReason,
                intPNRSegmentID: intPNRSegmentID,
            }, function (jsonData) {
                if (jsonData.State == true) {
                    //关闭模态框
                    $("#modChangeTicket").modal("hide");
                    //页面跳转
                    window.location.replace("OrderInfoShow?ETicketID=" + ID);
                } else
                {
                    layer.alert(jsonData.Text);
                }

            });



        }
    </script>
</body>
</html>
